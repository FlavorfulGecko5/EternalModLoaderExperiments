using EternalModLoader.Mods;
using EternalModLoader.Mods.Resources;
using EternalModLoader.Mods.Sounds;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace EternalModLoader
{
    /// <summary>
    /// Hard-coded mods for online multiplayer safety
    /// </summary>
    public static class OnlineSafety
    {
        /// <summary>
        /// Whether or not the multiplayer disabler mod is initialized and ready to be injected
        /// </summary>
        private static bool s_isInitialized = false;

        /// <summary>
        /// Parent mod for the online safety hard-coded mods
        /// </summary>
        private static Mod s_parentMod = new Mod()
        {
            LoadPriority = int.MinValue,
            RequiredVersion = EternalModLoader.Version
        };

        /// <summary>
        /// Horde Mode coin scoringItem decl with zero score
        /// </summary>
        private static byte[] s_hordeCoinScoreNullifier = new byte[]
        {
            0x7B, 0x65, 0x64, 0x69, 0x74, 0x3D, 0x7B, 0x69, 0x63, 0x6F, 0x6E, 0x3D, 0x22, 0x61, 0x72, 0x74,
            0x2F, 0x75, 0x69, 0x2F, 0x69, 0x63, 0x6F, 0x6E, 0x73, 0x2F, 0x68, 0x6F, 0x72, 0x64, 0x65, 0x2F,
            0x69, 0x63, 0x6F, 0x6E, 0x5F, 0x62, 0x6F, 0x6E, 0x75, 0x73, 0x5F, 0x63, 0x6F, 0x69, 0x6E, 0x22,
            0x3B, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3D, 0x22, 0x53, 0x43, 0x4F, 0x52,
            0x45, 0x5F, 0x45, 0x56, 0x45, 0x4E, 0x54, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x43, 0x4F, 0x49,
            0x4E, 0x22, 0x3B, 0x73, 0x74, 0x61, 0x74, 0x53, 0x63, 0x6F, 0x72, 0x65, 0x3D, 0x22, 0x53, 0x54,
            0x41, 0x54, 0x5F, 0x48, 0x4F, 0x52, 0x44, 0x45, 0x5F, 0x43, 0x4F, 0x49, 0x4E, 0x53, 0x5F, 0x47,
            0x41, 0x54, 0x48, 0x45, 0x52, 0x45, 0x44, 0x5F, 0x53, 0x43, 0x4F, 0x52, 0x45, 0x22, 0x3B, 0x7D,
            0x7D
        };

        /// <summary>
        /// Horde Mode challenge complete scoringItem decl with zero score
        /// </summary>
        private static byte[] s_challengeCompleteScoreNullifier = new byte[]
        {
            0x7B, 0x65, 0x64, 0x69, 0x74, 0x3D, 0x7B, 0x73, 0x63, 0x6F, 0x72, 0x65, 0x3D, 0x30, 0x3B, 0x69,
            0x63, 0x6F, 0x6E, 0x3D, 0x22, 0x61, 0x72, 0x74, 0x2F, 0x75, 0x69, 0x2F, 0x69, 0x63, 0x6F, 0x6E,
            0x73, 0x2F, 0x63, 0x6F, 0x64, 0x65, 0x78, 0x2F, 0x75, 0x61, 0x63, 0x22, 0x3B, 0x65, 0x76, 0x65,
            0x6E, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3D, 0x22, 0x53, 0x43, 0x4F, 0x52, 0x45, 0x5F, 0x45, 0x56,
            0x45, 0x4E, 0x54, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x43, 0x48, 0x41, 0x4C, 0x4C, 0x45, 0x4E,
            0x47, 0x45, 0x22, 0x3B, 0x7D, 0x7D
        };

        /// <summary>
        /// Nullified Horde scoringRubric decl
        /// </summary>
        private static byte[] s_nullifiedScoringRubric = new byte[]
        {
            0x7B, 0x65, 0x64, 0x69, 0x74, 0x3D, 0x7B, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6C, 0x74,
            0x79, 0x53, 0x63, 0x6F, 0x72, 0x65, 0x42, 0x6F, 0x6E, 0x75, 0x73, 0x3D, 0x7B, 0x70, 0x74, 0x72,
            0x3D, 0x7B, 0x70, 0x74, 0x72, 0x5B, 0x30, 0x5D, 0x3D, 0x7B, 0x76, 0x61, 0x6C, 0x75, 0x65, 0x3D,
            0x30, 0x3B, 0x7D, 0x70, 0x74, 0x72, 0x5B, 0x31, 0x5D, 0x3D, 0x7B, 0x76, 0x61, 0x6C, 0x75, 0x65,
            0x3D, 0x30, 0x3B, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6C, 0x74, 0x79, 0x3D, 0x22, 0x44,
            0x49, 0x46, 0x46, 0x49, 0x43, 0x55, 0x4C, 0x54, 0x59, 0x5F, 0x4D, 0x45, 0x44, 0x49, 0x55, 0x4D,
            0x22, 0x3B, 0x7D, 0x70, 0x74, 0x72, 0x5B, 0x32, 0x5D, 0x3D, 0x7B, 0x76, 0x61, 0x6C, 0x75, 0x65,
            0x3D, 0x30, 0x3B, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6C, 0x74, 0x79, 0x3D, 0x22, 0x44,
            0x49, 0x46, 0x46, 0x49, 0x43, 0x55, 0x4C, 0x54, 0x59, 0x5F, 0x48, 0x41, 0x52, 0x44, 0x22, 0x3B,
            0x7D, 0x70, 0x74, 0x72, 0x5B, 0x33, 0x5D, 0x3D, 0x7B, 0x76, 0x61, 0x6C, 0x75, 0x65, 0x3D, 0x30,
            0x3B, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6C, 0x74, 0x79, 0x3D, 0x22, 0x44, 0x49, 0x46,
            0x46, 0x49, 0x43, 0x55, 0x4C, 0x54, 0x59, 0x5F, 0x4E, 0x49, 0x47, 0x48, 0x54, 0x4D, 0x41, 0x52,
            0x45, 0x22, 0x3B, 0x7D, 0x70, 0x74, 0x72, 0x5B, 0x34, 0x5D, 0x3D, 0x7B, 0x64, 0x69, 0x66, 0x66,
            0x69, 0x63, 0x75, 0x6C, 0x74, 0x79, 0x3D, 0x22, 0x44, 0x49, 0x46, 0x46, 0x49, 0x43, 0x55, 0x4C,
            0x54, 0x59, 0x5F, 0x55, 0x4C, 0x54, 0x52, 0x41, 0x5F, 0x4E, 0x49, 0x47, 0x48, 0x54, 0x4D, 0x41,
            0x52, 0x45, 0x22, 0x3B, 0x7D, 0x7D, 0x7D, 0x64, 0x65, 0x6D, 0x6F, 0x6E, 0x49, 0x74, 0x65, 0x6D,
            0x73, 0x3D, 0x7B, 0x6E, 0x75, 0x6D, 0x3D, 0x30, 0x3B, 0x7D, 0x62, 0x6F, 0x75, 0x6E, 0x74, 0x79,
            0x49, 0x74, 0x65, 0x6D, 0x73, 0x3D, 0x7B, 0x6E, 0x75, 0x6D, 0x3D, 0x30, 0x3B, 0x7D, 0x76, 0x69,
            0x6F, 0x6C, 0x65, 0x6E, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x49, 0x74, 0x65, 0x6D, 0x73,
            0x3D, 0x7B, 0x6E, 0x75, 0x6D, 0x3D, 0x30, 0x3B, 0x7D, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x49, 0x74,
            0x65, 0x6D, 0x73, 0x3D, 0x7B, 0x6E, 0x75, 0x6D, 0x3D, 0x30, 0x3B, 0x7D, 0x65, 0x6E, 0x64, 0x4F,
            0x66, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x49, 0x74, 0x65, 0x6D, 0x73, 0x3D, 0x7B, 0x6E, 0x75, 0x6D,
            0x3D, 0x30, 0x3B, 0x7D, 0x7D, 0x7D
        };

        /// <summary>
        /// Generic SWF data
        /// </summary>
        private static byte[] s_genericSWFData = new byte[]
        {
            0x25, 0x45, 0x70, 0x00, 0x00, 0x45, 0x07, 0x00, 0x00, 0x3C, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x2C, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x0A, 0x00, 0x00, 0x00, 0x72, 0x6F, 0x6C, 0x6C, 0x4F,
            0x6E, 0x42, 0x61, 0x63, 0x6B, 0x00, 0x00, 0x00, 0x0D, 0x0C, 0x00, 0x00, 0x00, 0x72, 0x6F, 0x6C,
            0x6C, 0x4F, 0x66, 0x66, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x00, 0x00, 0x00, 0x17, 0x0B, 0x00, 0x00,
            0x00, 0x72, 0x6F, 0x6C, 0x6C, 0x4F, 0x6E, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x00, 0x00, 0x00, 0x21,
            0x0B, 0x00, 0x00, 0x00, 0x72, 0x6F, 0x6C, 0x6C, 0x4F, 0x66, 0x66, 0x42, 0x61, 0x63, 0x6B, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x0E, 0x26, 0x01, 0x00, 0x01, 0x00,
            0x00, 0x5F, 0x63, 0x65, 0x6E, 0x74, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
            0x00, 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x5F, 0x66, 0x6C, 0x61, 0x2E, 0x4D, 0x61, 0x69,
            0x6E, 0x54, 0x69, 0x6D, 0x65, 0x6C, 0x69, 0x6E, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x04,
            0xBE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x34, 0x0B, 0x67,
            0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x5F, 0x66, 0x6C, 0x61, 0x0C, 0x4D, 0x61, 0x69, 0x6E, 0x54,
            0x69, 0x6D, 0x65, 0x6C, 0x69, 0x6E, 0x65, 0x0D, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x64, 0x69,
            0x73, 0x70, 0x6C, 0x61, 0x79, 0x09, 0x4D, 0x6F, 0x76, 0x69, 0x65, 0x43, 0x6C, 0x69, 0x70, 0x18,
            0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x5F, 0x66, 0x6C, 0x61, 0x3A, 0x4D, 0x61, 0x69, 0x6E,
            0x54, 0x69, 0x6D, 0x65, 0x6C, 0x69, 0x6E, 0x65, 0x00, 0x07, 0x5F, 0x63, 0x65, 0x6E, 0x74, 0x65,
            0x72, 0x06, 0x66, 0x72, 0x61, 0x6D, 0x65, 0x31, 0x07, 0x66, 0x72, 0x61, 0x6D, 0x65, 0x31, 0x32,
            0x07, 0x66, 0x72, 0x61, 0x6D, 0x65, 0x32, 0x32, 0x07, 0x66, 0x72, 0x61, 0x6D, 0x65, 0x33, 0x32,
            0x07, 0x66, 0x72, 0x61, 0x6D, 0x65, 0x34, 0x33, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6C, 0x65,
            0x21, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x63, 0x6F,
            0x6D, 0x2F, 0x41, 0x53, 0x33, 0x2F, 0x32, 0x30, 0x30, 0x36, 0x2F, 0x62, 0x75, 0x69, 0x6C, 0x74,
            0x69, 0x6E, 0x0B, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x75, 0x74, 0x69, 0x6C, 0x73, 0x13, 0x66,
            0x6C, 0x61, 0x73, 0x68, 0x2E, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6C, 0x69,
            0x74, 0x79, 0x0D, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x64, 0x65, 0x73, 0x6B, 0x74, 0x6F, 0x70,
            0x0C, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x65, 0x72, 0x72, 0x6F, 0x72, 0x73, 0x0C, 0x66, 0x6C,
            0x61, 0x73, 0x68, 0x2E, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x73, 0x0E, 0x66, 0x6C, 0x61, 0x73, 0x68,
            0x2E, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6E, 0x61, 0x6C, 0x0D, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E,
            0x66, 0x69, 0x6C, 0x74, 0x65, 0x72, 0x73, 0x0A, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x67, 0x65,
            0x6F, 0x6D, 0x13, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x67, 0x6C, 0x6F, 0x62, 0x61, 0x6C, 0x69,
            0x7A, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x0B, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x6D, 0x65, 0x64,
            0x69, 0x61, 0x09, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x6E, 0x65, 0x74, 0x0D, 0x66, 0x6C, 0x61,
            0x73, 0x68, 0x2E, 0x6E, 0x65, 0x74, 0x2E, 0x64, 0x72, 0x6D, 0x0E, 0x66, 0x6C, 0x61, 0x73, 0x68,
            0x2E, 0x70, 0x72, 0x69, 0x6E, 0x74, 0x69, 0x6E, 0x67, 0x0E, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E,
            0x70, 0x72, 0x6F, 0x66, 0x69, 0x6C, 0x65, 0x72, 0x0D, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x73,
            0x61, 0x6D, 0x70, 0x6C, 0x65, 0x72, 0x0D, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x73, 0x65, 0x6E,
            0x73, 0x6F, 0x72, 0x73, 0x0C, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x73, 0x79, 0x73, 0x74, 0x65,
            0x6D, 0x0A, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x74, 0x65, 0x78, 0x74, 0x0E, 0x66, 0x6C, 0x61,
            0x73, 0x68, 0x2E, 0x74, 0x65, 0x78, 0x74, 0x2E, 0x69, 0x6D, 0x65, 0x11, 0x66, 0x6C, 0x61, 0x73,
            0x68, 0x2E, 0x74, 0x65, 0x78, 0x74, 0x2E, 0x65, 0x6E, 0x67, 0x69, 0x6E, 0x65, 0x08, 0x66, 0x6C,
            0x61, 0x73, 0x68, 0x2E, 0x75, 0x69, 0x0B, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x75, 0x74, 0x69,
            0x6C, 0x73, 0x09, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x78, 0x6D, 0x6C, 0x17, 0x66, 0x6C, 0x61,
            0x73, 0x68, 0x2E, 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x3A, 0x4D, 0x6F, 0x76, 0x69, 0x65,
            0x43, 0x6C, 0x69, 0x70, 0x14, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x64, 0x69, 0x73, 0x70, 0x6C,
            0x61, 0x79, 0x3A, 0x53, 0x70, 0x72, 0x69, 0x74, 0x65, 0x24, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E,
            0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x3A, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x4F,
            0x62, 0x6A, 0x65, 0x63, 0x74, 0x43, 0x6F, 0x6E, 0x74, 0x61, 0x69, 0x6E, 0x65, 0x72, 0x1F, 0x66,
            0x6C, 0x61, 0x73, 0x68, 0x2E, 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x3A, 0x49, 0x6E, 0x74,
            0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x1B, 0x66,
            0x6C, 0x61, 0x73, 0x68, 0x2E, 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x3A, 0x44, 0x69, 0x73,
            0x70, 0x6C, 0x61, 0x79, 0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x1C, 0x66, 0x6C, 0x61, 0x73, 0x68,
            0x2E, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x73, 0x3A, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x44, 0x69, 0x73,
            0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x04, 0x73, 0x74, 0x6F, 0x70, 0x0E, 0x61, 0x64, 0x64,
            0x46, 0x72, 0x61, 0x6D, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x06, 0x4F, 0x62, 0x6A, 0x65,
            0x63, 0x74, 0x0F, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
            0x65, 0x72, 0x0D, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74,
            0x11, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4F, 0x62, 0x6A, 0x65,
            0x63, 0x74, 0x16, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74,
            0x43, 0x6F, 0x6E, 0x74, 0x61, 0x69, 0x6E, 0x65, 0x72, 0x06, 0x53, 0x70, 0x72, 0x69, 0x74, 0x65,
            0x27, 0x16, 0x01, 0x16, 0x03, 0x18, 0x05, 0x16, 0x06, 0x17, 0x01, 0x05, 0x00, 0x05, 0x00, 0x08,
            0x0E, 0x08, 0x0F, 0x16, 0x10, 0x08, 0x11, 0x16, 0x12, 0x16, 0x13, 0x08, 0x14, 0x16, 0x15, 0x16,
            0x16, 0x08, 0x17, 0x16, 0x18, 0x16, 0x19, 0x16, 0x1A, 0x08, 0x1B, 0x08, 0x1C, 0x08, 0x1D, 0x08,
            0x1E, 0x16, 0x1F, 0x16, 0x20, 0x16, 0x21, 0x08, 0x22, 0x16, 0x23, 0x16, 0x24, 0x08, 0x25, 0x1A,
            0x05, 0x1A, 0x26, 0x1A, 0x27, 0x1A, 0x28, 0x1A, 0x29, 0x1A, 0x2A, 0x1A, 0x2B, 0x02, 0x26, 0x06,
            0x07, 0x04, 0x01, 0x05, 0x08, 0x09, 0x0A, 0x0B, 0x02, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12,
            0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x03, 0x20, 0x21,
            0x22, 0x23, 0x24, 0x25, 0x26, 0x17, 0x07, 0x01, 0x02, 0x07, 0x02, 0x04, 0x07, 0x04, 0x07, 0x07,
            0x05, 0x08, 0x07, 0x05, 0x09, 0x07, 0x05, 0x0A, 0x07, 0x05, 0x0B, 0x07, 0x05, 0x0C, 0x09, 0x0D,
            0x01, 0x09, 0x2C, 0x01, 0x09, 0x2D, 0x01, 0x09, 0x08, 0x01, 0x09, 0x09, 0x01, 0x09, 0x0A, 0x01,
            0x09, 0x0B, 0x01, 0x09, 0x0C, 0x01, 0x07, 0x04, 0x2E, 0x07, 0x0D, 0x2F, 0x07, 0x02, 0x30, 0x07,
            0x02, 0x31, 0x07, 0x02, 0x32, 0x07, 0x02, 0x33, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x02, 0x08, 0x03, 0x00,
            0x06, 0x06, 0x03, 0x00, 0x00, 0x02, 0x00, 0x04, 0x01, 0x00, 0x01, 0x05, 0x01, 0x00, 0x02, 0x06,
            0x01, 0x00, 0x03, 0x07, 0x01, 0x00, 0x04, 0x08, 0x01, 0x00, 0x05, 0x00, 0x00, 0x01, 0x07, 0x01,
            0x01, 0x04, 0x01, 0x00, 0x08, 0x00, 0x01, 0x01, 0x09, 0x0A, 0x03, 0xD0, 0x30, 0x47, 0x00, 0x00,
            0x01, 0x02, 0x01, 0x0A, 0x0B, 0x0C, 0xD0, 0x30, 0xD0, 0x27, 0x61, 0x09, 0x5D, 0x0A, 0x4F, 0x0A,
            0x00, 0x47, 0x00, 0x00, 0x02, 0x01, 0x01, 0x0A, 0x0B, 0x08, 0xD0, 0x30, 0x5D, 0x0A, 0x4F, 0x0A,
            0x00, 0x47, 0x00, 0x00, 0x03, 0x01, 0x01, 0x0A, 0x0B, 0x08, 0xD0, 0x30, 0x5D, 0x0A, 0x4F, 0x0A,
            0x00, 0x47, 0x00, 0x00, 0x04, 0x01, 0x01, 0x0A, 0x0B, 0x08, 0xD0, 0x30, 0x5D, 0x0A, 0x4F, 0x0A,
            0x00, 0x47, 0x00, 0x00, 0x05, 0x01, 0x01, 0x0A, 0x0B, 0x08, 0xD0, 0x30, 0x5D, 0x0A, 0x4F, 0x0A,
            0x00, 0x47, 0x00, 0x00, 0x06, 0x0B, 0x01, 0x0A, 0x0B, 0x24, 0xD0, 0x30, 0xD0, 0x49, 0x00, 0x5D,
            0x0B, 0x24, 0x00, 0xD0, 0x66, 0x0C, 0x24, 0x0B, 0xD0, 0x66, 0x0D, 0x24, 0x15, 0xD0, 0x66, 0x0E,
            0x24, 0x1F, 0xD0, 0x66, 0x0F, 0x24, 0x2A, 0xD0, 0x66, 0x10, 0x4F, 0x0B, 0x0A, 0x47, 0x00, 0x00,
            0x07, 0x02, 0x01, 0x01, 0x09, 0x27, 0xD0, 0x30, 0x65, 0x00, 0x60, 0x11, 0x30, 0x60, 0x12, 0x30,
            0x60, 0x13, 0x30, 0x60, 0x14, 0x30, 0x60, 0x15, 0x30, 0x60, 0x16, 0x30, 0x60, 0x02, 0x30, 0x60,
            0x02, 0x58, 0x00, 0x1D, 0x1D, 0x1D, 0x1D, 0x1D, 0x1D, 0x1D, 0x68, 0x01, 0x47, 0x00, 0x00
        };

        /// <summary>
        /// ResourceModFile objects that contain the hard-coded mod that disables multiplayer
        /// </summary>
        public static List<ResourceModFile> MultiplayerDisablerMod = new List<ResourceModFile>()
        {
            // Battlemode
            new ResourceModFile(s_parentMod, "generated/decls/menuelement/main_menu/screens/multiplayer.decl", "gameresources_patch2", false)
            {
                FileData = new MemoryStream(new byte[]
                {
                    0x7B, 0x65, 0x64, 0x69, 0x74, 0x3D, 0x7B, 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x4E, 0x61,
                    0x6D, 0x65, 0x3D, 0x22, 0x23, 0x73, 0x74, 0x72, 0x5F, 0x63, 0x6F, 0x64, 0x65, 0x5F, 0x6D, 0x61,
                    0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x70, 0x6C, 0x61, 0x79, 0x5F, 0x6F, 0x6E, 0x6C, 0x69,
                    0x6E, 0x65, 0x5F, 0x6E, 0x61, 0x6D, 0x65, 0x22, 0x3B, 0x7D, 0x7D
                })
            },
            new ResourceModFile(s_parentMod, "generated/decls/menuelement/main_menu/screens/battle_arena_play_online.decl", "gameresources_patch2", false)
            {
                FileData = new MemoryStream(new byte[]
                {
                    0x7B, 0x65, 0x64, 0x69, 0x74, 0x3D, 0x7B, 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x4E, 0x61,
                    0x6D, 0x65, 0x3D, 0x22, 0x23, 0x73, 0x74, 0x72, 0x5F, 0x63, 0x6F, 0x64, 0x65, 0x5F, 0x6D, 0x61,
                    0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x62, 0x61, 0x74, 0x74, 0x6C, 0x65, 0x5F, 0x61, 0x72,
                    0x65, 0x6E, 0x61, 0x5F, 0x6E, 0x61, 0x6D, 0x65, 0x22, 0x3B, 0x7D, 0x7D
                })
            },
            new ResourceModFile(s_parentMod, "swf/hud/menus/battle_arena/play_online_screen.swf", "gameresources_patch2", false)
            {
                FileData = new MemoryStream(s_genericSWFData, 0, s_genericSWFData.Length, false, true)
            },
            new ResourceModFile(s_parentMod, "swf/hud/menus/battle_arena/lobby.swf", "gameresources_patch2", false)
            {
                FileData = new MemoryStream(s_genericSWFData, 0, s_genericSWFData.Length, false, true)
            },
            new ResourceModFile(s_parentMod, "swf/main_menu/screens/battle_arena.swf", "gameresources_patch1", false)
            {
                FileData = new MemoryStream(s_genericSWFData, 0, s_genericSWFData.Length, false, true)
            },
            new ResourceModFile(s_parentMod, "swf/main_menu/screens/match_browser.swf", "gameresources_patch1", false)
            {
                FileData = new MemoryStream(s_genericSWFData, 0, s_genericSWFData.Length, false, true)
            },
            // Horde Mode
            new ResourceModFile(s_parentMod, "generated/decls/scoringrubric/horde.decl", "gameresources_patch2", false)
            {
                FileData = new MemoryStream(s_nullifiedScoringRubric, 0, s_nullifiedScoringRubric.Length, false, true)
            },
            new ResourceModFile(s_parentMod, "generated/decls/scoringitem/horde/challenge_complete.decl", "gameresources_patch2", false)
            {
                FileData = new MemoryStream(s_challengeCompleteScoreNullifier, 0, s_challengeCompleteScoreNullifier.Length, false, true)
            },
            new ResourceModFile(s_parentMod, "generated/decls/scoringitem/horde/coin.decl", "e6m1_cult_horde", false)
            {
                FileData = new MemoryStream(s_hordeCoinScoreNullifier, 0, s_hordeCoinScoreNullifier.Length, false, true)
            },
            new ResourceModFile(s_parentMod, "generated/decls/scoringitem/horde/coin.decl", "e6m2_earth_horde", false)
            {
                FileData = new MemoryStream(s_hordeCoinScoreNullifier, 0, s_hordeCoinScoreNullifier.Length, false, true)
            },
            new ResourceModFile(s_parentMod, "generated/decls/scoringitem/horde/coin.decl", "e6m3_mcity_horde", false)
            {
                FileData = new MemoryStream(s_hordeCoinScoreNullifier, 0, s_hordeCoinScoreNullifier.Length, false, true)
            }
        };

        /// <summary>
        /// Localization for the multiplayer disabler mod
        /// </summary>
        public static Dictionary<string, string> MultiplayerDisablerModLocalization = new Dictionary<string, string>()
        {
            { "french",                 "^8BATTLEMODE 2.0 (DÉSACTIVÉ)" },
            { "italian",                "^8BATTLEMODE 2.0 (DISABILITATO)" },
            { "german",                 "^8BATTLEMODE 2.0 (DEAKTIVIERT)" },
            { "spanish",                "^8BATTLEMODE 2.0 (DESHABILITADO)" },
            { "russian",                "^8BATTLEMODE 2.0 (ОТКЛЮЧЕН)" },
            { "polish",                 "^8BATTLEMODE 2.0 (DEZAKTYWOWANY)" },
            { "japanese",               "^8BATTLEMODE 2.0(無効)" },
            { "latin_spanish",          "^8BATTLEMODE 2.0 (DESHABILITADO)" },
            { "portuguese",             "^8BATTLEMODE 2.0 (DESABILITADO)" },
            { "traditional_chinese",    "^8BATTLEMODE 2.0（已禁用）" },
            { "simplified_chinese",     "^8BATTLEMODE 2.0（已禁用）" },
            { "korean",                 "^8BATTLEMODE 2.0(비활성화됨)" },
            { "english",                "^8BATTLEMODE 2.0 (DISABLED)" }
        };

        /// <summary>
        /// Online-safe mod name keywords
        /// </summary>
        public static string[] OnlineSafeModNameKeywords = new string[]
        {
            "/eternalmod/",
            ".tga",
            ".png",
            ".swf",
            ".bimage",
            "/advancedscreenviewshake/",
            "/audiolog/",
            "/audiologstory/",
            "/automap/",
            "/automapplayerprofile/",
            "/automapproperties/",
            "/automapsoundprofile/",
            "/env/",
            "/font/",
            "/fontfx/",
            "/fx/",
            "/gameitem/",
            "/globalfonttable/",
            "/gorebehavior/",
            "/gorecontainer/",
            "/gorewounds/",
            "/handsbobcycle/",
            "/highlightlos/",
            "/highlights/",
            "/hitconfirmationsoundsinfo/",
            "/hud/",
            "/hudelement/",
            "/lightrig/",
            "/lodgroup/",
            "/material2/",
            "/md6def/",
            "/modelasset/",
            "/particle/",
            "/particlestage/",
            "/renderlayerdefinition/",
            "/renderparm/",
            "/renderparmmeta/",
            "/renderprogflag/",
            "/ribbon2/",
            "/rumble/",
            "/soundevent/",
            "/soundpack/",
            "/soundrtpc/",
            "/soundstate/",
            "/soundswitch/",
            "/speaker/",
            "/staticimage/",
            "/swfresources/",
            "/uianchor/",
            "/uicolor/",
            "/weaponreticle/",
            "/weaponreticleswfinfo/",
            "/entitydef/light/",
            "/entitydef/fx",
            "/impacteffect/",
            "/uiweapon/",
            "/globalinitialwarehouse/",
            "/globalshell/",
            "/warehouseitem/",
            "/warehouseofflinecontainer/",
            "/tooltip/",
            "/livetile/",
            "/tutorialevent/",
            "/maps/game/dlc/",
            "/maps/game/dlc2/",
            "/maps/game/hub/",
            "/maps/game/shell/",
            "/maps/game/sp/",
            "/maps/game/tutorials/",
            "/decls/campaign/"
        };

        /// <summary>
        /// Online-unsafe resource name keywords
        /// </summary>
        public static string[] UnsafeResourceNameKeywords = new string[]
        {
            "gameresources",
            "pvp",
            "shell",
            "warehouse",
            "e6"
        };

        /// <summary>
        /// Initializes the multiplayer disabler mod
        /// </summary>
        public static void InitMultiplayerDisablerMod()
        {
            if (s_isInitialized)
            {
                return;
            }

            // Build the resource mod files for the localization
            foreach (var localization in MultiplayerDisablerModLocalization)
            {
                var jsonBytes = Encoding.UTF8.GetBytes($"{{\"strings\":[{{\"name\":\"#str_code_mainmenu_play_online_name\",\"text\":\"{localization.Value}\"}}]}}");

                MultiplayerDisablerMod.Add(new ResourceModFile(s_parentMod, $"EternalMod/strings/{localization.Key}.json", "gameresources_patch1", false)
                {
                    IsBlangJson = true,
                    FileData = new MemoryStream(jsonBytes, 0, jsonBytes.Length, false, true)
                });
            }

            s_isInitialized = true;
        }

        /// <summary>
        /// Determines whether or not the mod with the given name and resource name is safe for online play
        /// </summary>
        /// <param name="mod">mod</param>
        /// <returns>whether or not the mod with the given name and resource name is safe for online play</returns>
        public static bool IsModSafeForOnline(Mod mod)
        {
            bool isSafe = true;
            bool isModifyingUnsafeResource = false;
            List<ResourceModFile> assetsInfoJsons = new List<ResourceModFile>();

            foreach (var modFile in mod.Files)
            {
                if (modFile is SoundModFile)
                {
                    continue;
                }

                var resourceModFile = modFile as ResourceModFile;

                // Check assets info files last
                if (resourceModFile.IsAssetsInfoJson)
                {
                    assetsInfoJsons.Add(resourceModFile);
                    continue;
                }

                if (UnsafeResourceNameKeywords.Any(keyword => resourceModFile.ResourceName.StartsWith(keyword, StringComparison.OrdinalIgnoreCase)))
                {
                    isModifyingUnsafeResource = true;
                }

                // Allow modification of anything outside of "generated/decls/"
                if (!string.IsNullOrEmpty(resourceModFile.Name)
                    && !resourceModFile.Name.StartsWith("generated/decls/", StringComparison.OrdinalIgnoreCase))
                {
                    continue;
                }

                if (isSafe)
                {
                    isSafe = OnlineSafeModNameKeywords.Any(keyword => resourceModFile.Name.ToLower().Contains(keyword));
                }
            }

            if (isSafe)
            {
                return true;
            }

            if (!isSafe && isModifyingUnsafeResource)
            {
                return false;
            }

            // Don't allow adding unsafe mods in safe resource files into unsafe resources files
            // Otherwise, don't mark the mod as unsafe, it should be fine for single-player if
            // the mod is not modifying a critical resource
            foreach (var assetsInfo in assetsInfoJsons)
            {
                if (assetsInfo.AssetsInfo != null)
                {
                    if (assetsInfo.AssetsInfo.Resources != null
                        && !string.IsNullOrEmpty(assetsInfo.ResourceName)
                        && UnsafeResourceNameKeywords.Any(keyword => assetsInfo.ResourceName.StartsWith(keyword, StringComparison.OrdinalIgnoreCase)))
                    {
                        return false;
                    }
                }
            }

            return true;
        }
    }
}
